import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer

buildscript {

    ext {
        kotlinVersion = '1.4.31'
        spekVersion = '1.1.5'
        slf4jVersion = '1.7.25'
        log4jVersion = '1.2.17'
        konfVersion = '0.20.0'
        mockkversion = '1.9'
        junitVersion = '1.0.2'
        tbotVersion = '5.0.1.1'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version '1.4.31'
    id "application"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id("org.jmailen.kotlinter") version "3.4.0"
    id "org.jlleitschuh.gradle.ktlint-idea" version "9.2.1"
}

configurations {
    ktlint
}

group 'com.github.sbaldin'
version '0.6'

mainClassName = "com.github.sbaldin.tbot.ApplicationKt"
defaultTasks 'run'

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

kotlinter {
    ignoreFailures = false
    indentSize = 4
    reporters = ['checkstyle', 'plain']
    experimentalRules = true
    disabledRules = ['import-ordering', 'experimental:argument-list-wrapping', 'final-newline', 'chain-wrapping']
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    implementation 'com.uchuhimo:konf-core:0.20.0'
    implementation 'com.uchuhimo:konf-yaml:0.20.0'

    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.slf4j:slf4j-log4j12:${slf4jVersion}"
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'

    // https://mvnrepository.com/artifact/org.telegram/telegrambots
    implementation "org.telegram:telegrambots:$tbotVersion"

    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.0.2'

    // https://mvnrepository.com/artifact/org.asynchttpclient/async-http-client
    implementation group: 'org.asynchttpclient', name: 'async-http-client', version: '2.12.2'
    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.13.1'
    // https://mvnrepository.com/artifact/net.sourceforge.htmlunit/htmlunit
    implementation group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.47.1'

    // comment/remove the line above and uncomment the line below
    implementation "com.github.elbekD:kt-telegram-bot:1.3.8"

    implementation 'com.vdurmont:emoji-java:5.1.1'

    implementation "org.deeplearning4j:deeplearning4j-core:1.0.0-beta7"
    implementation "org.nd4j:nd4j-native-platform:1.0.0-beta7"

    testImplementation "io.mockk:mockk:${mockkversion}"
    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")
    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")

    testImplementation("org.jetbrains.spek:spek-api:$spekVersion") {
        exclude group: 'org.jetbrains.kotlin'
    }
    testImplementation("org.jetbrains.spek:spek-data-driven-extension:$spekVersion") {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntime("org.jetbrains.spek:spek-junit-platform-engine:$spekVersion") {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }

    testRuntime "org.junit.platform:junit-platform-runner:$junitVersion"
    testRuntime "org.junit.platform:junit-platform-console:$junitVersion"
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
    kotlinOptions {
        freeCompilerArgs = ["-Xinline-classes"]
    }
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}
test {
    useJUnitPlatform {
        includeEngines 'spek'
    }
}

application {
    applicationDefaultJvmArgs = ['-Xmx512m']
}

tasks.withType(JavaExec) {
    systemProperties System.properties
}

tasks.withType(ShadowJar) {
    manifest {
        attributes["Main-Class"] = "com.github.sbaldin.tbot.Application"
    }
    //Stuff to run shadow jar with dl4j
    //dl4j pulls too many dependencies, ypu need zip64 to be able to put it all to one jar
    transform(AppendingTransformer) {
        resource = 'reference.conf'
    }
    zip64 = true
}


static boolean isLinuxOrMacOs() {
    System.getProperty("os.name").toLowerCase(Locale.ROOT) in ["linux", "mac os", "macos"]
}

//Following task are used to format code before commit
task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
//check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

task copyGitHooks(type: Copy, group: "git hooks") {
    description = "Copies the git hooks from scripts/git-hooks to the .git folder."
    group = "git hooks"
    from("$rootDir/scripts/git-hooks/") {
        include("**/*.sh")
        rename("(.*).sh", "\$1")
    }
    into("$rootDir/.git/hooks")
}

task installGitHooks(type: Exec,  group: "git hooks") {
    description = "Installs the pre-commit git hooks from scripts/git-hooks."
    group = "git hooks"
    workingDir(rootDir)
    commandLine("chmod")
    args("-R", "+x", ".git/hooks/")
    dependsOn copyGitHooks
    onlyIf {
        isLinuxOrMacOs()
    }
    doLast {
        logger.info("Git hooks installed successfully.")
    }
}

task deleteGitHooks(type: Delete,  group: "git hooks") {
    description = "Delete the pre-commit git hooks."
    group = "git hooks"
    delete(fileTree(".git/hooks/"))
}

afterEvaluate {
    tasks["clean"].dependsOn(tasks.named("installGitHooks"))
}

check.dependsOn tasks.ktlint